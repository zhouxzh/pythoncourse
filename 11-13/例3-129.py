import matplotlib.pyplot as pltfig = plt.figure()ax = fig.gca()data = [1, 2, 3, 4]# 返回包含饼状图中所有扇形区域的列表sectors = ax.pie(data, labels=tuple(map(str,data)),                 shadow=True)[0][:len(data)]# 初始颜色colors = [sector.get_facecolor() for sector in sectors]    def mouse_motion(event):        for index, sector in enumerate(sectors):        # x和y是鼠标在图形窗口中的位置，图形左上角是(0,0)        if sector.contains_point((event.x,event.y)):            # 修改鼠标正在滑过的扇形区域颜色和半径            sector.set_facecolor((1,1,0,1))            sector.set_radius(1.3)        else:            # 还原其他扇形区域的颜色和半径            sector.set_facecolor(colors[index])            sector.set_radius(1)    fig.canvas.draw_idle()# 绑定鼠标移动事件处理函数fig.canvas.mpl_connect('motion_notify_event', mouse_motion)plt.show()